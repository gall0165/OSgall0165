
char[] MESSAGE = "gall0165 checkpoint3.1";
unsigned char *current_screen_line = $0400;
unsigned char current_screen_x = 0;

void test_memory(){
	unsigned short mem_start = $0800;
	unsigned short mem_end = $0800;
	unsigned char  value;
	volatile unsigned char *p = $0800;
		while(p <$8000){
			value = 0;
		do{
			*p = value;
			if(*p != value){
				print_to_screen("memory error at $");
				print_hex((unsigned short)p);
				print_newline();
				mem_end = (unsigned short)p-1;

		print_to_screen("memory found at $");
		print_hex(mem_start);
		print_to_screen(" - $");
		print_hex(mem_end);
			return;
			}	
		value++;
		}while(value !=0);
		p++;
		}
		mem_end = $7FFF;
	print_to_screen("memory found at $");
	print_hex(mem_start);
	print_to_screen(" - $");
	print_hex(mem_end);
}
void print_hex(unsigned short value)
{
	char[5] hex;
	unsigned char i;
	for(i=0;i<4;i++){
		if(value<0xa000) hex[i]='0'+(char)(value>>12);
		else hex[i]=(char)(value>>12)-9;
		value<<=4;
		}
	hex[4]=0;
	print_to_screen(hex);
	}
void print_to_screen(char* message){
	char* sc = current_screen_line;
	while(*message){
	current_screen_line[current_screen_x]= *message;
	message++;
	current_screen_x++;
	}
}
void print_newline(){
	current_screen_line+=40;	
	current_screen_x = 0;
}

void exit_hypervisor()
{
	//Trigger exit from Hypervisor mode
	*(unsigned char *)$D67F = $01;
}

void RESET(){
	*VIC_MEMORY = 0x14;
	memset(SCREEN,' ',40*25);
	memset(COLS,WHITE,40*25);
	/* while(true){
	  if(*RASTER==54 || *RASTER==66){
	    *BGCOL = WHITE;
	  } else {
	    *BGCOL=BLACK;
	  }
	}*/

print_to_screen("gall0165 operating system starting...");
print_newline();
print_to_screen("testing hardware");
print_newline();

test_memory();

exit_hypervisor();

}
void main(){exit_hypervisor();
}


